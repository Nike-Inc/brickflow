[tool.poetry]
name = "brickflows"
version = "0.11.0a0"
description = "Deploy scalable workflows to databricks using python"
authors = ["Ashok Singamaneni, Sriharsha Tikkireddy"]
readme = "README.md"
license = "Apache License 2.0"
homepage = "https://github.com/Nike-Inc/brickflow"
repository = "https://github.com/Nike-Inc/brickflow"
packages = [{ include = "brickflow" }, { include = "brickflow_plugins" }]
include = ["LICENSE", "entrypoint.template", "gitignore_template.txt"]
exclude = ["sample_workflows", "tests"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  | brickflow/tf
  | venv
  | brickflow.egg-info
  | dist
  | brickflow/bundles
)/
'''

[tool.poetry.dependencies]
python = ">=3.9,<3.13"            # pyspark <3.5 does not play happy with python 3.11. The latest DBRs Runtime (15.4) ships with Python 3.11.
Jinja2 = ">=3.1.5"
click = "^8.1.3"
databricks-sdk = ">=0.1.8 <1.0.0"
networkx = "3.1"
pendulum = "3.1.0"
pluggy = "^1.0.0"
pydantic = ">=2.0.0 <3.0.0"
python-decouple = "3.8"
pyyaml = "^6.0"
requests = ">=2.28.2 <3.0.0"
# cerberus-python-client = {version = "~2.5.4",  optional = true } # Users might have to manually install cerberus-python-client if required
# tableauserverclient = {version = "~0.25", optional = true } # Users might have to manually install tableauserverclient if required


[tool.poetry.scripts]
bf = "brickflow.cli:cli"
brickflow = "brickflow.cli:cli"

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
coverage = "^7.2.5"
datamodel-code-generator = "^0.25.2"
deepdiff = "^6.3.0"
mypy = "^1.3.0"
pre-commit = "^3.3.1"
prospector = "^1.10.3"
py4j = "^0.10.9.7"
pytest = ">=7.3.1 <8.0.0"
pytest-mock = "^3.10.0"
types-PyYAML = "*"                       # only for development purposes no need to make installation req
types-requests = ">=2.28.11.16 <3.0.0.0" # only for development purposes no need to make installation req
apache-airflow = "^2.7.3"
snowflake = "^1.5.0"
tableauserverclient = "^0.25"
boxsdk = "^3.9.2"
cerberus-python-client = "^2.5.4"
watchdog = "<4.0.0"
requests-mock = "1.12.1"
pyspark = "^3.0.0"
apache-airflow-providers-fab = ">=1.5.2"

[tool.poetry.group.docs.dependencies]
mdx-include = "^1.4.2"
mike = "^2.1.3"
mkdocs-click = "^0.8.1"
mkdocs-material = "^9.5.49"
mkdocstrings = { extras = ["python"], version = "^0.27.0" }

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
bump = true
style = "semver"

[tool.coverage]
[tool.coverage.run]
omit = [
    # omit anything in a .local directory anywhere
    '*/.local/*',
    '**',
    'tests/*',
    '*/tests/*',
    # omit anything in a .venv directory anywhere
    '.venv/*',
    "*/site-packages/*",
]

[tool.coverage.report]
skip_empty = true

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
files = [
    "brickflow/context/*.py",
    "brickflow/cli/*.py",
    "brickflow/hints/*.py",
    "brickflow/engine/*.py",
    "brickflow/resolver/*.py",
    "brickflow/codegen/*.py",
]
follow_imports = "skip"

[tool.pylint.main]
fail-under = 9.0


[tool.pylint."messages control"]
disable = ["too-many-lines", "too-many-positional-arguments"]
